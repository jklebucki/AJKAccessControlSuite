@using AJKAccessControl.Shared.DTOs

<div class="row">
    <div class="col-md-4">
        <button class="btn btn-primary" @onclick="AddUser">Dodaj użytkownika</button>
    </div>
</div>

@if (Users != null && Users.Any())
{
    <table class="table table-custom">
    <thead>
        <tr>
            <th>Nazwa użytkownika</th>
            <th>Email</th>
            <th>Imię</th>
            <th>Nazwisko</th>
            <th>Nr tel.</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@(user.Email == null ? "" : user.Email)</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.PhoneNumber</td>
                    <td>
                        <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Edytuj użytkownika">
                            <button class="btn btn-outline-primary btn-sm square-btn" @onclick="() => OnEditUser(user.UserName)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                </svg>
                            </button>
                        </span>
                        <button class="btn btn-outline-danger btn-sm square-btn" @onclick="() => OnDeleteUser(user.UserName)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </button>
                        <button class="btn btn-outline-warning btn-sm square-btn" @onclick="() => OnChangePassword(user.UserName)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-key" viewBox="0 0 16 16">
                                <path d="M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8m4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5" />
                                <path d="M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No users found.</p>
}

@code {
    [Parameter]
    public List<UserDto> Users { get; set; } = new List<UserDto>();
    [Parameter]
    public EventCallback AddUser { get; set; }
    [Parameter]
    public EventCallback<string> EditUser { get; set; }
    [Parameter]
    public EventCallback<string> DeleteUser { get; set; }
    [Parameter]
    public EventCallback<string> ChangePassword { get; set; }

    private async Task OnEditUser(string userId)
    {
        await EditUser.InvokeAsync(userId);
    }
    private async Task OnDeleteUser(string userId)
    {
        await DeleteUser.InvokeAsync(userId);
    }
    private async Task OnChangePassword(string userId)
    {
        await ChangePassword.InvokeAsync(userId);
    }

}
