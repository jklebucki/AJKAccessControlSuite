@using AJKAccessControl.Shared.DTOs

<div class="row">
    <div class="col-md-4">
        <button class="btn btn-primary" @onclick="AddUser">Dodaj użytkownika</button>
    </div>
</div>

@if (Users != null && Users.Any())
{
    <table class="table table-custom">
    <thead>
        <tr>
            <th>Nazwa użytkownika</th>
            <th>Email</th>
            <th>Imię</th>
            <th>Nazwisko</th>
            <th>Nr tel.</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@(user.Email == null ? "" : user.Email)</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.PhoneNumber</td>
                    <td>
                        <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Edytuj użytkownika">
                            <button class="btn btn-outline-primary btn-sm square-btn" @onclick="() => OnEditUser(user.UserName)">
                                <span class="icon-pencil-square" />
                            </button>
                        </span>
                        <button class="btn btn-outline-danger btn-sm square-btn" @onclick="() => OnDeleteUser(user.UserName)">
                            <span class="icon-trash" />
                        </button>
                        <button class="btn btn-outline-warning btn-sm square-btn" @onclick="() => OnChangePassword(user.UserName)">
                            <span class="icon-key" />
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No users found.</p>
}

@code {
    [Parameter]
    public List<UserDto> Users { get; set; } = new List<UserDto>();
    [Parameter]
    public EventCallback AddUser { get; set; }
    [Parameter]
    public EventCallback<string> EditUser { get; set; }
    [Parameter]
    public EventCallback<string> DeleteUser { get; set; }
    [Parameter]
    public EventCallback<string> ChangePassword { get; set; }

    private async Task OnEditUser(string userId)
    {
        await EditUser.InvokeAsync(userId);
    }
    private async Task OnDeleteUser(string userId)
    {
        await DeleteUser.InvokeAsync(userId);
    }
    private async Task OnChangePassword(string userId)
    {
        await ChangePassword.InvokeAsync(userId);
    }

}
